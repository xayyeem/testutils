{"version":3,"sources":["component/Navbar.js","component/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","rows","onChange","event","target","style","backgroundColor","newtext","toLocaleUpperCase","toLocaleLowerCase","split","length","App","setMode","document","body","summ","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f25001d7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'? 'dark':'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label \"  htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable dark mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, about: PropTypes.string };\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleOnClick=()=>{\r\n       \r\n       let newtext = text.toLocaleUpperCase();\r\n       setText(newtext);\r\n    }\r\n\r\n    const handleOfClick=()=>{\r\n       \r\n        let newtext = text.toLocaleLowerCase();\r\n        setText(newtext);\r\n     }\r\n\r\n     const cleartext = ()=>{\r\n        let newtext = \"\";\r\n        setText(newtext)\r\n     }\r\n\r\n    const handleOnChange=(event)=>{\r\n        \r\n        setText(event.target.value);\r\n     }\r\n    const [text, setText] = useState(\"enter your text here\");\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    {/* <label htmlFor=\"exampleFormControlTextarea1\"  className=\"form-label\" >{props.summ} - {text}</label> */}\r\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\"value={text} rows=\"8\" onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white'}}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleOnClick}>Upper Case</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleOfClick}>Lower Case</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={cleartext}>clear</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2>summary</h2>\r\n                <p>you have {text.split(\" \").length}.length words and {text.length} character</p>\r\n                <p>{0.008 * text.split(\" \").length} minute read</p>\r\n                <h3>preview</h3>\r\n                <p>{text.length>0?text:\"enter in box to preview\"}</p>\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\n// import Alert from './component/Alert';\nimport About from './component/About';\n\n// let name = \"khalid\"\n\nfunction App() {\n\n\n\n\n  const [mode,setMode]= useState('light');\n  \n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='grey'\n      document.title = 'dark mode - textUtils'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white'\n      document.title = 'light mode - textUtils'\n    }\n  }\n\n  return (\n    <>\n        <Navbar title = \"Text Utils\"  mode={mode} toggleMode={toggleMode} ></Navbar>\n        {/* <Alert alert={alert}/> */}\n        <div className=\"container\">\n        <Textform heading = \"enter the text to analyze\" summ = \"enter here\" ></Textform>\n        </div>\n        {/* <About></About> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}